@model IEnumerable<Service_layer.Movie>
@{
    ViewData["Title"] = "GetAll";
}

<form method="get">
    <input type="text" name="title" placeholder="Search by title..." value="@Context.Request.Query["title"]" />
    <button type="submit">Search</button>
</form>

<form method="get">
    @*  <select name="genre">
    <option value="">All Genres</option>
    @if (ViewData["Genres"] is List<string> genres && genres.Any())
    {
    foreach (var genre in genres)
    {
    <option value="@genre" selected="@(ViewData["SelectedGenre"]?.ToString() == genre ? "selected" : null)">
    @genre
    </option>
    }
    }
    </select> *@

    <select name="genre" multiple>
        @if (ViewData["Genres"] is List<string> genres && genres.Any())
        {
            foreach (var genre in genres)
            {
                <option value="@genre" selected="@(ViewData["SelectedGenres"] is List<string> selectedGenres && selectedGenres.Contains(genre) ? "selected" : null)">
                    @genre
                </option>
            }
        }
    </select>
    <button type="submit">Search</button>
</form>
<style>
    .table, .pagination a {
        width: 100%;
        border-collapse: collapse;
        table-layout: fixed;
    }

    .table th, .table td {
        border: 1px solid black;
        padding: 8px;
        text-align: left;
        word-wrap: break-word;
    }

    .pagination {
        display: inline-block;
        margin-top: 20px;
        bottom: 50px; /* Aligns to the bottom */
        right: 30px; /* Aligns to the right */
    }

    .pagination a {
        padding: 5px 10px; /* Smaller padding */
        margin: 0 3px; /* Smaller margin */
        text-decoration: none;
        border: 1px solid #ccc;
        font-size: 12px; /* Smaller font size */
    }

    .pagination .active {
        background-color: #4CAF50;
        color: white;
    }

    .disabled {
        color: grey;
        pointer-events: none;
    }
</style>

<table class="table">
    <thead>
        <tr>
            <th>Title</th>
            <th>Genres</th>
            <th>Cast</th>
            <th>Year</th>
            <th>Thumbnail</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Title)</td>
                <td>@string.Join(", ", item.genres!)</td>
                <td>@string.Join("," , item.Cast!)</td>
                <td>@Html.DisplayFor(modelItem => item.Year)</td>
                <td><img src="@item.Thumbnail" alt="Thumbnail" width="100" height="150" /></td>
            </tr>
        }
    </tbody>
</table>

<div class="pagination">
    <!-- Previous Link -->
    <a class="@((ViewBag.CurrentPage > 1) ? "" : "disabled")"
       href="@Url.Action("GetAll", new { title = Context.Request.Query["title"], page = ViewBag.CurrentPage - 1, pageSize = ViewBag.PageSize })">Previous</a>

    <!-- Page Numbers -->
    @if (ViewBag.CurrentPage > 3)
    {
        <a href="@Url.Action("GetAll", new { title = Context.Request.Query["title"], page = 1, pageSize = ViewBag.PageSize })">1</a>
        <span>...</span>
    }

    @for (var i = Math.Max(1, ViewBag.CurrentPage - 2); i <= Math.Min(ViewBag.TotalPages, ViewBag.CurrentPage + 2); i++)
    {
        <a class="@(i == ViewBag.CurrentPage ? "active" : "")"
           href="@Url.Action("GetAll", new { title = Context.Request.Query["title"], page = i, pageSize = ViewBag.PageSize })">@i</a>
    }

    @if (ViewBag.CurrentPage < ViewBag.TotalPages - 2)
    {
        <span>...</span>
        <a href="@Url.Action("GetAll", new { title = Context.Request.Query["title"], page = ViewBag.TotalPages, pageSize = ViewBag.PageSize })">@ViewBag.TotalPages</a>
    }

    <!-- Next Link -->
    <a class="@((ViewBag.CurrentPage < ViewBag.TotalPages) ? "" : "disabled")"
       href="@Url.Action("GetAll", new { title = Context.Request.Query["title"], page = ViewBag.CurrentPage + 1, pageSize = ViewBag.PageSize })">Next</a>
</div>


