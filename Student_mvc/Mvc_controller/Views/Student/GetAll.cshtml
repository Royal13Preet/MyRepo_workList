@model IEnumerable<DataAccess.DBModel.Student>

<a asp-action="Create" class="btn btn-primary">Create New Student</a>



@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success fade-out">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["DeleteMessage"] != null)
{
    <div class="alert alert-success fade-out">
        @TempData["DeleteMessage"]
    </div>
}

<div class="d-flex justify-content-end mb-3">
    <input type="text" id="searchBox" class="form-control w-25" placeholder="Search by name..." />
</div>


<table class="table" id="studentTable">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Age</th>
            <th>Course</th>
            <th>Profile Picture</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var student in Model)
        {
            <tr>
                <td>@student.Id</td>
                <td>@student.Name</td>
                <td>@student.Age</td>
                <td>@student.Course</td>
                <td>
                    @if (!string.IsNullOrEmpty(student.ProfilePicture))
                    {
                        <img src="@student.ProfilePicture" alt="Profile Picture" class="img-thumbnail" width="150" />
                    }
                    else
                    {
                        <span>No Image</span>
                    }
                </td>
                <td>
                    @if (student.IsActive)
                    {
                        <span>✅ Active</span>
                    }
                    else
                    {
                        <span>❌ Inactive</span>
                    }
                </td>
                <td>
                    @if (!student.IsActive)
                    {
                        <form asp-action="Restore" method="post" style="display:inline;">
                            <input type="hidden" name="id" value="@student.Id" />
                            <button type="submit" class="btn btn-success">Restore</button>
                        </form>
                    }
                    else
                    {
                        <form asp-action="Delete" method="post" style="display:inline;">
                            <input type="hidden" name="id" value="@student.Id" />
                            <button type="submit" class="btn btn-danger">Soft Delete</button>
                        </form>
                    }
                    @if (!student.IsActive)
                    {
                        <button class="btn btn-warning" disabled>Edit</button>
                    }
                    else
                    {
                        <a href="@Url.Action("Edit", "Student", new { id = student.Id })" class="btn btn-warning">Edit</a>
                    }

                    <a href="@Url.Action("PermanentDelete", "Student", new { id = student.Id })" class="btn btn-danger">Permanent Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="pagination">
    @if (ViewBag.CurrentPage > 1)
    {
        <a href="@Url.Action("GetAll", new { page = ViewBag.CurrentPage - 1 })" class="btn btn-primary">Previous</a>
    }

    <span> Page @ViewBag.CurrentPage of @ViewBag.TotalPages </span>

    @if (ViewBag.CurrentPage < ViewBag.TotalPages)
    {
        <a href="@Url.Action("GetAll", new { page = ViewBag.CurrentPage + 1 })" class="btn btn-primary">Next</a>
    }
</div>

<style>
    .pagination {
        text-align: center;
        margin-top: 20px;
    }
</style>

<script>
    setTimeout(function () {
        document.querySelectorAll('.fade-out').forEach(el => {
            el.style.transition = "opacity 1s ease-out";
            el.style.opacity = "0";
            setTimeout(() => el.remove(), 1000); // Remove element after fade-out
        });
    }, 5000);
</script>