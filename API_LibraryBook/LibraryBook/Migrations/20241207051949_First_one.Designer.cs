// <auto-generated />
using LibraryBook;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryBook.Migrations
{
    [DbContext(typeof(BookContext))]
    [Migration("20241207051949_First_one")]
    partial class First_one
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryBook.Models.Author", b =>
                {
                    b.Property<int>("AuthorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorID"));

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorID");

                    b.ToTable("author");

                    b.HasData(
                        new
                        {
                            AuthorID = 1,
                            AuthorName = "Ravinder"
                        },
                        new
                        {
                            AuthorID = 2,
                            AuthorName = "Mark Douglass"
                        },
                        new
                        {
                            AuthorID = 3,
                            AuthorName = "Kuvempu"
                        });
                });

            modelBuilder.Entity("LibraryBook.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<int>("AuthorID")
                        .HasColumnType("int");

                    b.Property<string>("BookGenre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.HasIndex("AuthorID");

                    b.ToTable("book");

                    b.HasData(
                        new
                        {
                            BookId = 10,
                            AuthorID = 1,
                            BookGenre = "Romantic",
                            BookTitle = "Can Love Happen Twice"
                        },
                        new
                        {
                            BookId = 11,
                            AuthorID = 3,
                            BookGenre = "LifeStyle",
                            BookTitle = "The house of Kanooru"
                        },
                        new
                        {
                            BookId = 12,
                            AuthorID = 1,
                            BookGenre = "Childhood",
                            BookTitle = "Like it happend yesterday"
                        });
                });

            modelBuilder.Entity("LibraryBook.Models.Book", b =>
                {
                    b.HasOne("LibraryBook.Models.Author", "Author")
                        .WithMany("books")
                        .HasForeignKey("AuthorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("LibraryBook.Models.Author", b =>
                {
                    b.Navigation("books");
                });
#pragma warning restore 612, 618
        }
    }
}
